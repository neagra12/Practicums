apiVersion: apps/v1
kind: Deployment
metadata:
  name: arithmetic-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: arithmetic-service
  template:
    metadata:
      labels:
        app: arithmetic-service
    spec:
      containers:
        - name: arithmetic-service
          image: $CONTAINER_REGISTRY/arithmetic-service:$VERSION
          imagePullPolicy: Always
          env:
            - name: PORT
              value: "8080"
              VERSION: ${{ github.sha }}
              CONTAINER_REGISTRY:${{ secrets.AZURE_CONTAINER_REGISTRY }}
              CONTAINER_REGISTRY_UN:${{ secrets.AZURE_CONTAINER_REGISTRY_UN }}
              CONTAINER_REGISTRY_PW:${{ secrets.AZURE_CONTAINER_REGISTRY_PW }
          steps:
            - uses: actions/checkout@v3
            - name: npm install
              run: npm ci
            - name: run the unit tests
              run: npm test
            - name: Publish the image to github container registry
              run: |
                docker login --username neagra12 --password ${{secrets.ACCESS_TOKEN}} ghcr.io
                docker build -t ghcr.io/neagra12/arithmetic-service:$VERSION --file Dockerfile .
                docker push ghcr.io/neagra12/arithmetic-service:$VERSION
            - name: Publish the image to azure container registry
              run: |
                docker login --username $CONTAINER_REGISTRY_UN --password $CONTAINER_REGISTRY_PW $CONTAINER_REGISTRY
                docker tag ghcr.io/neagra12/arithmetic-service:$VERSION $CONTAINER_REGISTRY/arithmetic-service:$VERSION
                docker push $CONTAINER_REGISTRY/arithmetic-service:$VERSION
            - uses: tale/kubectl-action@v1
              with:
                base64-kube-config: ${{ secrets.KUBE_CONFIG }}
            - name: Deploy
              run: ./depoy.sh
      imagePullSecrets:
        - name: acr-auth   # This is where the secret is referenced
---
apiVersion: v1
kind: Service
metadata:
  name: arithmetic-service
spec:
  selector:
    app: arithmetic-service
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
      nodePort: 30000
